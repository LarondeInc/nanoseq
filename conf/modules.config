/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: 'copy',
        enabled: true,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    // nanoseq.nf includes
    withName: CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: 'copy',
            enabled: true,
            pattern: '*_versions.yml'
        ]
    }
    withName: GET_TEST_DATA {
        publishDir = [
            path: { "${params.outdir}/test-dataset" },
            mode: 'copy',
            enabled: false,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    // INPUT_CHECK
    withName: SAMPLESHEET_CHECK {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: 'copy',
            enabled: true,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
}

if (!params.skip_basecalling) {
    process {
        withName: GUPPY {
            publishDir = [
                path: { "${params.outdir}/guppy" },
                mode: 'copy',
                enabled: true,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
            ]
        }
    }
}

if (!params.skip_basecalling && params.output_demultiplex_fast5) {
    process {
        withName: DEMUX_FAST5 {
            publishDir = [
                path: { "${params.outdir}/demux_fast5" },
                mode: 'copy',
                enabled: true,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
            ]
        }
    }
}

if (params.skip_basecalling && !params.skip_demultiplexing) {
    process {
        withName: QCAT {
            publishDir = [
                path: { "${params.outdir}/qcat" },
                mode: 'copy',
                enabled: true,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
            ]
        }
    }
}

